# Getting started with data analysis

# Background to this example

Data comes in all sorts and forms within Earth sciences, from long term paleo records describing Oxygen levels in the atmosphere, timeseries of river discharge and spatio-temporal satellite images monitoring the vegetation. Within Earth Sciences we work with all these types of data to understand the past, present and future of the Earth system. Before we can work with these types of data we need to understand what we can and cannot do with the data, which conclusion we can and cannot draw.

**In this practical we will start looking at different types of data and distributions of these data to get a better understanding of the different types of data and their distributions.**

Let's start with using Python again by opening your Conda environment and then opening Spyder (for detailed instructions please look back at the first practical). We start by loading some of the stand libraries in this course. We use:

-   Pandas (data management and data handling)

-   Numpy (statistical analysis and data handling)

-   Matplotlib (plotting)

-   Scipy (statistical analysis)

## Code

``` python
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import scipy.stats as stats
```

Now we are going to take a look at the first dataset which contains information about the daily temperatures in the Netherlands. We tell pandas to parse the date information, and use it as row labels:

``` python
Tas = pd.read_csv("../Data/dailyTemperature.csv", parse_dates=True, index_col=0)
Precip = pd.read_csv("../Data/dailyPrecipitation.csv", parse_dates=True, index_col=0)
Evap = pd.read_csv("../Data/dailyEvaporation.csv", parse_dates=True, index_col=0)
```

# Normal or not

Let's start with exploring different data sources, we want to identify which distributions they follow.

#### Question 1

*Let's start with a visual inspection. A good way to start is to make a histogram of you data. Use the cheat sheet to explore which function to use to make a histograms of the different meteorological variables.*

As you might have seen some distributions are unlikely to be normal, but we have another way of testing this using the QQ-plot.

#### Question 2

*Let's continue with a second visual inspection. Use your knowledge from last week (or look back) to make a QQ plot of the meteorological variables. What is your conclusion based on this analysis, are the variables normally distributed?*

#### Question 3

*Try to implement the Shapiro Wilks test in Python on the different dataset. You can use the function stats.shapiro, for which you find the manual here: <https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.shapiro.html>.*

#### Question 4

*Based on the different test, histogram, QQ-plot and statistical test with Shapiro Wilks, what are your conclusions? They do not have to align for the different tests.*

If we assume temperature to be normally distributed we can also derive the two mean statistical properties, namely the mean and standard deviation.

#### Question 5

*Obtain the mean and standard deviation for the temperature record.*

Now that we got the mean and standard deviation we can calculate the possibility of daily temperature exceeding certain thresholds. You can use the [stats.norm.cdf()](https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.norm.html) function for this, and then provide the mean and standard deviation you found earlier.

#### Question 6

*What is the chance of having a daily temperature above 20C*

If all is well you found that in roughly 5% of the days we have temperatures above 20C in the Netherlands. If this number seems low to you, mind you that we are here talking daily average temperatures and not maximum temperatures that are often reported on the news.

A question we often hear in the media, is climate change already happening and is the world really getting warmer? Let's test that for the Netherlands.

#### Question 7

*Select the last 20 years on the record and compare those to the entire record that we have. First select the years, calculate the new mean and standard deviation and then see if we are more likely to observe temperatures above 20C compared to the full record from 1901 onwards.*

If you did it well you find that the probability of Tas \> 20C has increased from 5% to 7%. So far we have done this mostly with the statistical approximiation of the data (e.g. a fitted normal distribution), however we also have the real data available. As a tip look at the startingPandas practical on how to test an entire dataframe for a certain condition.

##### Question 8

*Count the number of days that exceed or equal \>= 20C for the entire record and the last 20 years and convert these into fractions.*

If you did it well you find that in the total record we have 1436 days with temperatures \>= 20C for a total of 45097 days, which results in 3.2% of the days. For the last 20 years we 420 years \>= 20C for a total record length of 7305 which results in 5.7% of the days. As you can see these numbers don't match the once you found for Question 7.

##### Question 9

*Using the QQ plot you made earlier, can you see a reason why the normal distribution is not doing a good job for this assessment, especially for the high values. Would you expect that the answers for Questions 7 and 8 are closer when looking at \<= 0C*

#### Question 10

*Repeat Questions 6, 7 and 8 but now for <= 0C, was your initial estimate correct?*
If all went well you find that the chance of <= 0C temperatures is around 6.5% for the entire data record (depending on the method used) and 4.1% for the last 20 years.

#### Question 11

*Can you conclude from your assessment of Tas <= 0C that temperatures are rising and that iceskating becomes less and less likely? Or would you like to propose additional calculations or data requirements?*

Using the same weather data the [KNMI did an in-depth assessment](https://www.knmi.nl/over-het-knmi/nieuws/laatste-elfstedentocht-nu-25-jaar-geleden/), you can compare your answers to what they found and see if your finding are in line.
